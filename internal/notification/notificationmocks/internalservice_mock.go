// Code generated by MockGen. DO NOT EDIT.
// Source: endpoint.go

// Package notificationmocks is a generated GoMock package.
package notificationmocks

import (
	reflect "reflect"

	notification "github.com/despondency/notifications-service/internal/notification"
	gomock "github.com/golang/mock/gomock"
)

// MockInternalManager is a mock of InternalManager interface.
type MockInternalManager struct {
	ctrl     *gomock.Controller
	recorder *MockInternalManagerMockRecorder
}

// MockInternalManagerMockRecorder is the mock recorder for MockInternalManager.
type MockInternalManagerMockRecorder struct {
	mock *MockInternalManager
}

// NewMockInternalManager creates a new mock instance.
func NewMockInternalManager(ctrl *gomock.Controller) *MockInternalManager {
	mock := &MockInternalManager{ctrl: ctrl}
	mock.recorder = &MockInternalManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInternalManager) EXPECT() *MockInternalManagerMockRecorder {
	return m.recorder
}

// PushNotificationInternal mocks base method.
func (m *MockInternalManager) PushNotificationInternal(notification *notification.Request) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PushNotificationInternal", notification)
	ret0, _ := ret[0].(error)
	return ret0
}

// PushNotificationInternal indicates an expected call of PushNotificationInternal.
func (mr *MockInternalManagerMockRecorder) PushNotificationInternal(notification interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PushNotificationInternal", reflect.TypeOf((*MockInternalManager)(nil).PushNotificationInternal), notification)
}
