---
version: '3.9'

services:
#  notifications:
#    container_name: notifications
#    build:
#      context: .
#      dockerfile: Dockerfile
#    image: notifications:1.0
#    environment:
#      - DB_CONNECT_STRING=postgres://root:@crdb:26257/postgres?sslmode=disable
#      - INTERNAL_GROUP_ID=received-notifications-group-id
#      - INTERNAL_TOPIC=received-notifications
#      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093
#      - OUTSTANDING_GROUP_ID=outstanding-notifications-group-id
#      - OUTSTANDING_TOPIC=outstanding-notifications
#      - PORT=8090
#    ports:
#      - "8090:8090"
#    depends_on:
#      - crdb
#      - kafka

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  crdb:
    image: cockroachdb/cockroach:v22.1.1
    container_name: crdb
    ports:
      - "26257:26257"
      - "8080:8080"
    command: start-single-node --insecure
    volumes:
      - ./data:/cockroach/cockroach-data